variables: variables.yml

templates:

  global:
    no_entries_ok: yes
    proxy:
      socks5: '{? proxy.address ?}'

  anchors:
    _deluge: &deluge
      username: '{? deluge.username ?}'
      password: '{? deluge.password ?}'
      path: '{? local.deluge ?}'
      ratio: 1.0

    _entries: &entries
      title: 'FlexGet'
      via:
        - pushbullet:
            api_key: '{? pushbullet.apikey ?}'
    
    _filesystem: &filesystem
      retrieve: files
      regexp: '.*\.(mp4|mkv)$'
    
    _free_space: &free_space
      path: '{? local.downloads ?}'

    _sftp_list: &sftp_list
      host: '{? sftp.host ?}'
      port: '{? sftp.port ?}'
      username: '{? sftp.username ?}'
      private_key: '{? sftp.private_key ?}'
      private_key_pass: '{? sftp.private_key_pass ?}'

    _trakt_list: &trakt_list
      username: '{? trakt.username ?}'
      account: '{? trakt.username ?}'
      strip_dates: yes
  
  notify-series:
    notify:
      entries:
        <<: *entries
        message: "Downloading {{series_name|replace(':',' -')}} {{series_id|pad(2)}}"

  notify-sort:
    notify:
      entries:
        <<: *entries
        message: "Downloaded {{title|replace('.mkv','')|replace('.mp4','')}}"

tasks:

  anime:
    rss:
      url: '{? feeds.anime ?}'
      all_entries: no
    include: anime.yml
    free_space:
      <<: *free_space
      space: 1000
    deluge:
      <<: *deluge
      content_filename: "{{series_name|replace(':',' -')}} {{series_id|pad(2)}}"
      move_completed_path: '{? remote.downloads ?}/anime/'
    template: notify-series

  tv:
    rss:
      url: '{? feeds.tv ?}'
      all_entries: no
    include: tv.yml
    free_space:
      <<: *free_space
      space: 1500
    deluge:
      <<: *deluge
      move_completed_path: '{? remote.downloads ?}/tv/'
    template: notify-series
  
  movies:
    rss:
      url: '{? feeds.movies ?}'
      all_entries: no
    regexp:
      reject_excluding:
        - '{? regexp.filter ?}'
    tmdb_lookup: yes
    list_match:
      from:
        - movie_list: movies
    free_space:
      <<: *free_space
      space: 3500
    deluge:
      <<: *deluge
      move_completed_path: '{? remote.downloads ?}/movies/'
    notify:
      entries:
        <<: *entries
        message: "Downloading {{tmdb_name|replace(':',' -'}} [{{tmdb_year}}]"

  update-movie-list:
    limit:
      amount: 10
      from:
        trakt_list:
          <<: *trakt_list
          list: '{? trakt.movies ?}'
          type: movies
    accept_all: yes
    list_add:
      - movie_list: movies
    list_remove:
      - trakt_list:
          <<: *trakt_list
          list: '{? trakt.movies ?}'
          type: movies

  deluge-cleanup:
    from_deluge: yes
    disable: builtins
    if:
      - deluge_progress == 100: accept
    deluge:
      action: remove

  sync-anime:
    sftp_list:
      <<: *sftp_list
      dirs:
        - '{? remote.downloads ?}/anime/'
    regexp:
      accept:
        - '.*\.mkv$'
    free_space:
      <<: *free_space
      space: 1500
    sftp_download:
      to: '{? local.downloads ?}/anime/'

  sync-tv:
    sftp_list:
      <<: *sftp_list
      dirs:
        - '{? remote.downloads ?}/tv/'
      recursive: true
    regexp:
      accept:
        -  '.*\.mkv$'
    free_space:
      <<: *free_space
      space: 1500
    sftp_download:
      to: '{? local.downloads ?}/tv/'

  sync-movies:
    sftp_list:
      <<: *sftp_list
      dirs:
        - '{? remote.downloads ?}/movies/'
      recursive: true
    regexp:
      accept:
        -  '.*\.mp4$'
    free_space:
      <<: *free_space
      space: 3500
    sftp_download:
      to: '{? local.downloads ?}/.movies/'

  sort-anime:
    filesystem:
      <<: *filesystem
      path: '{? local.downloads ?}/anime/'
    accept_all: yes
    disable: builtins
    move:
      to: "{? local.videos ?}/Anime/{{title|re_replace(' \\d{2}','')|replace('.mkv','')}}/"
    template: notify-sort
  
  sort-tv:
    filesystem:
      <<: *filesystem
      path: '{? local.downloads ?}/tv/'
    metainfo_series: yes
    accept_all: yes
    disable: builtins
    move:
      to: "{? local.videos ?}/TV/{{series_name}}/Season {{series_season}}/"
      rename: "{{series_name|replace(':',' -')}} {{series_id|pad(2)}}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
    template: notify-sort

  move-movies:
    filesystem: 
      <<: *filesystem
      path: '{? local.downloads ?}/.movies/'
    accept_all: yes
    tmdb_lookup: yes
    disable: builtins
    move:
      to: "{? local.downloads ?}/movies/"
      rename: "{{tmdb_name|replace(':',' -')}} [{{tmdb_year}}]"
    template: notify-sort
  
schedules:
  - tasks: [anime, tv]
    schedule:
      minute: "*/30"
  - tasks: [update-movie-list, movies]
    schedule:
      hour: "*/2"
      minute: 10,40
  - tasks: [sync-anime, sort-anime, sync-tv, sort-tv, sync-movies, move-movies]
    schedule:
      minute: "*/30"
