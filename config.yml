variables: variables.yml

templates:

  global:
    no_entries_ok: yes

  anchors:
    _deluge: &deluge
      path: '{? local.deluge ?}'
      ratio: 1.0

    _entries: &entries
      title: 'FlexGet'
      via:
        - pushbullet:
            api_key: '{? pushbullet.apikey ?}'
    
    _filesystem: &filesystem
      recursive: yes
      retrieve: files
      regexp: '.*\.(mp4|mkv)$'
  
  notify-series:
    notify:
      entries:
        <<: *entries
        message: "Downloading {{series_name|replace(':',' -')}} {{series_id|pad(2)}}"

  notify-sort:
    notify:
      entries:
        <<: *entries
        message: "Downloaded {{title|replace('.mkv','')|replace('.mp4','')}}"

tasks:

  anime:
    rss:
      url: '{? feeds.anime ?}'
      all_entries: no
    include: anime.yml
    deluge:
      <<: *deluge
      content_filename: "{{series_name|replace(':',' -')}} {{series_id|pad(2)}}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
      movedone: '{? local.downloads ?}/series/'
    template: notify-series

  tv:
    rss:
      url: '{? feeds.tv ?}'
      all_entries: no
    include: tv.yml
    deluge:
      <<: *deluge
      movedone: '{? local.downloads ?}/.tv/'
    template: notify-series
    
  
  movies:
    rss:
      url: '{? feeds.movies ?}'
      all_entries: no
    crossmatch:
      from:
        - letterboxd:
            username: '{? letterboxd.username ?}'
            list: '{? letterboxd.list ?}'
            sort_by: release_ascending
            max_results: 5
      fields:
        - title
      action: accept
      exact: no
    tmdb_lookup: yes
    deluge:
      <<: *deluge
      content_filename: "{{tmdb_name|replace(':',' -')}} [{{tmdb_year}}]"
      main_file_only: yes
      movedone: '{? local.downloads ?}/.movies/'
    notify:
      entries:
        <<: *entries
        message: "Downloading {{tmdb_name|replace(':',' -'}} [{{tmdb_year}}]"

  move-tv:
    filesystem:
      <<: *filesystem
      path: '{? local.downloads ?}/.tv/'
    accept_all: yes
    metainfo_series: yes
    disable: builtins
    move:
      to: '{? local.downloads ?}/series/'
      rename: "{{series_name|replace(':',' -')}} {{series_id|pad(2)}}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
      clean_source: 100

  move-movies:
    filesystem:
      <<: *filesystem
      path: '{? local.downloads ?}/.movies/'
    accept_all: yes
    disable: builtins
    move:
      to: '{? local.downloads ?}/movies/'
      clean_source: 100

  
  sort-anime:
    filesystem: '{? local.downloads ?}/series/'
    configure_series:
      from:
        filesystem: '{? local.videos ?}/Anime/'
    move:
      to: "{? local.videos ?}/Anime/{{series_name}}/"
    template: notify-sort

  sort-tv:
    filesystem: '{? local.downloads ?}/series/'
    configure_series:
      from:
        filesystem: '{? local.videos ?}/TV/'
    move:
      to: "{? local.videos ?}/TV/{{series_name}}/Season {{series_season}}/"
    template: notify-sort

  sort-movies:
    filesystem: '{? local.downloads ?}/movies/'
    accept_all: yes
    move:
      to: "{? local.videos ?}/Movies/"
    template: notify-sort
    
schedules:
  - tasks: [anime, tv]
    schedule:
      minute: "*/30"
  - tasks: movies
    schedule:
      hour: 8
  - tasks: move-movies
    schedule:
      hour: 10
  - tasks: move-tv
    schedule:
      minute: "*/15"
  - tasks: [sort-anime, sort-tv, sort-movies]
    schedule:
      minute: 10,40
      hour: 8-23